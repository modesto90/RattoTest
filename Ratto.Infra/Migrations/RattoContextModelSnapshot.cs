// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ratto.Infra.Context;

namespace Ratto.Infra.Migrations
{
    [DbContext(typeof(RattoContext))]
    partial class RattoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ratto.Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Idade")
                        .IsRequired()
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Ratto.Domain.Entities.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("Ratto.Domain.Entities.Cliente", b =>
                {
                    b.OwnsOne("Ratto.Domain.ValueObjects.Document", "Cpf", b1 =>
                        {
                            b1.Property<int?>("ClienteId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Numero");

                            b1.Property<int>("Tipo");

                            b1.ToTable("Cliente");

                            b1.HasOne("Ratto.Domain.Entities.Cliente")
                                .WithOne("Cpf")
                                .HasForeignKey("Ratto.Domain.ValueObjects.Document", "ClienteId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("Ratto.Domain.Entities.Endereco", b =>
                {
                    b.OwnsOne("Ratto.Domain.ValueObjects.EnderecoInfo", "Bairro", b1 =>
                        {
                            b1.Property<int>("EnderecoId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Valor");

                            b1.ToTable("Endereco");

                            b1.HasOne("Ratto.Domain.Entities.Endereco")
                                .WithOne("Bairro")
                                .HasForeignKey("Ratto.Domain.ValueObjects.EnderecoInfo", "EnderecoId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("Ratto.Domain.ValueObjects.EnderecoInfo", "Cidade", b1 =>
                        {
                            b1.Property<int>("EnderecoId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Valor");

                            b1.ToTable("Endereco");

                            b1.HasOne("Ratto.Domain.Entities.Endereco")
                                .WithOne("Cidade")
                                .HasForeignKey("Ratto.Domain.ValueObjects.EnderecoInfo", "EnderecoId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("Ratto.Domain.ValueObjects.EnderecoInfo", "Estado", b1 =>
                        {
                            b1.Property<int?>("EnderecoId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Valor");

                            b1.ToTable("Endereco");

                            b1.HasOne("Ratto.Domain.Entities.Endereco")
                                .WithOne("Estado")
                                .HasForeignKey("Ratto.Domain.ValueObjects.EnderecoInfo", "EnderecoId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("Ratto.Domain.ValueObjects.EnderecoInfo", "Logradouro", b1 =>
                        {
                            b1.Property<int?>("EnderecoId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Valor");

                            b1.ToTable("Endereco");

                            b1.HasOne("Ratto.Domain.Entities.Endereco")
                                .WithOne("Logradouro")
                                .HasForeignKey("Ratto.Domain.ValueObjects.EnderecoInfo", "EnderecoId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
